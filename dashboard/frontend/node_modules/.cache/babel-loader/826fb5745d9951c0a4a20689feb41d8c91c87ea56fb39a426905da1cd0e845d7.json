{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\habibars\\\\Downloads\\\\Network monitoring\\\\intrusion_detection\\\\Random forest model\\\\dashboard\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n// to run the frontend \"npm start\"\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseURL = 'http://localhost:5000/api';\nfunction App() {\n  _s();\n  const [predictions, setPredictions] = useState([]);\n  useEffect(() => {\n    axios.get(`${baseURL}/get`).then(res => {\n      //console.log(res.data);\n      setPredictions(res.data);\n    });\n  });\n  console.log(predictions);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"App\", /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: predictions.map(prediction => prediction.date)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"zH5rPFTlWYOw2PPwe/kdtH2YoqI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","baseURL","App","_s","predictions","setPredictions","get","then","res","data","console","log","children","map","prediction","date","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/habibars/Downloads/Network monitoring/intrusion_detection/Random forest model/dashboard/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport axios from 'axios';\n// to run the frontend \"npm start\"\n\nconst baseURL = 'http://localhost:5000/api';\n\nfunction App() {\n  const [predictions, setPredictions] = useState([]);\n\n  useEffect(() =>  {\n    axios.get(`${baseURL}/get`)\n    .then((res) => {\n      //console.log(res.data);\n      setPredictions(res.data);\n    });\n    },);\n  console.log(predictions);\n  return (\n    <div>App\n      \n      <ul>\n        {predictions.map((prediction) => (prediction.date\n        ))}\n      </ul>\n\n    </div>\n  )\n}\n\nexport default App\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,OAAO,GAAG,2BAA2B;AAE3C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAElDD,SAAS,CAAC,MAAO;IACfE,KAAK,CAACQ,GAAG,CAAE,GAAEL,OAAQ,MAAK,CAAC,CAC1BM,IAAI,CAAEC,GAAG,IAAK;MACb;MACAH,cAAc,CAACG,GAAG,CAACC,IAAI,CAAC;IAC1B,CAAC,CAAC;EACF,CAAC,CAAE;EACLC,OAAO,CAACC,GAAG,CAACP,WAAW,CAAC;EACxB,oBACEJ,OAAA;IAAAY,QAAA,GAAK,KAEH,eAAAZ,OAAA;MAAAY,QAAA,EACGR,WAAW,CAACS,GAAG,CAAEC,UAAU,IAAMA,UAAU,CAACC,IAC5C;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAED;AAEV;AAAChB,EAAA,CArBQD,GAAG;AAAAkB,EAAA,GAAHlB,GAAG;AAuBZ,eAAeA,GAAG;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}